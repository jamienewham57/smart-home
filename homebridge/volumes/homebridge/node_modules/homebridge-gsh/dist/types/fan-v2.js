"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Fanv2 = void 0;
const hap_types_1 = require("../hap-types");
class Fanv2 {
    sync(service) {
        return {
            id: service.uniqueId,
            type: 'action.devices.types.FAN',
            traits: [
                'action.devices.traits.OnOff',
            ],
            name: {
                defaultNames: [
                    service.serviceName,
                    service.accessoryInformation.Name,
                ],
                name: service.serviceName,
                nicknames: [],
            },
            willReportState: true,
            deviceInfo: {
                manufacturer: service.accessoryInformation.Manufacturer,
                model: service.accessoryInformation.Model,
            },
            customData: {
                aid: service.aid,
                iid: service.iid,
                instanceUsername: service.instance.username,
                instanceIpAddress: service.instance.ipAddress,
                instancePort: service.instance.port,
            },
        };
    }
    query(service) {
        return {
            on: service.characteristics.find(x => x.type === hap_types_1.Characteristic.Active).value ? true : false,
            online: true,
        };
    }
    execute(service, command) {
        if (!command.execution.length) {
            return { payload: { characteristics: [] } };
        }
        switch (command.execution[0].command) {
            case ('action.devices.commands.OnOff'): {
                const payload = {
                    characteristics: [{
                            aid: service.aid,
                            iid: service.characteristics.find(x => x.type === hap_types_1.Characteristic.Active).iid,
                            value: command.execution[0].params.on ? 1 : 0,
                        }],
                };
                return { payload };
            }
        }
    }
}
exports.Fanv2 = Fanv2;
//# sourceMappingURL=fan-v2.js.map