import { PlatformAccessory } from 'homebridge';
import { IKHomeBridgeHomebridgePlatform } from '../platform';
import { MultiServiceAccessory } from '../multiServiceAccessory';
import { ShortEvent } from '../webhook/subscriptionHandler';
import { BaseService } from './baseService';
export declare class AirConditionerService extends BaseService {
    private temperatureUnit;
    private thermostatService;
    private fanService;
    private humidityService;
    private optionalModeSwitchService;
    private optionalMode;
    constructor(platform: IKHomeBridgeHomebridgePlatform, accessory: PlatformAccessory, componentId: string, capabilities: string[], multiServiceAccessory: MultiServiceAccessory, name: string, deviceStatus: any);
    private isCapabilitySupported;
    private setupThermostat;
    private setupFan;
    private setupOptionalModeSwitch;
    private setupHumiditySensor;
    private getHumidityLevel;
    private levelToFanMode;
    private fanModeToLevel;
    private fanOscillationModeToSwingMode;
    private setOptionalModeSwitchState;
    private getOptionalModeSwitchState;
    private setSwitchState;
    private getSwitchState;
    private setFanLevel;
    private getFanLevel;
    private setSwingMode;
    private getSwingMode;
    private airConditionerModeToTargetHeatingCoolingState;
    private targetHeatingCoolingStateToAirConditionerMode;
    private getTargetHeatingCoolingState;
    private setTargetHeatingCoolingState;
    private getCurrentHeatingCoolingState;
    private getCurrentTemperature;
    private getTargetTemperature;
    private setTargetTemperature;
    private getTemperatureDisplayUnits;
    private toCelsius;
    private fromCelsius;
    private sendCommandsOrFail;
    private getDeviceStatus;
    processEvent(event: ShortEvent): void;
}
//# sourceMappingURL=airConditionerService.d.ts.map